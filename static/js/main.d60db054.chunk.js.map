{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","filter","handleChange","event","target","name","value","setState","filterTodos","todos","todo","completed","title","includes","this","props","onSelectedUser","filteredTodos","className","type","onChange","map","key","id","classNames","readOnly","checked","onClick","userId","React","Component","defaultProps","request","url","fetch","then","response","a","json","data","CurrentUser","user","getUser","prevprops","onClearUser","email","phone","App","selectedUserId","setUserId","clearUser","allTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d60db054.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    filter: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterTodos = (todos) => {\n    const { query, filter } = this.state;\n\n    if (filter === 'completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    if (filter === 'active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    return todos.filter(todo => todo.title.includes(query));\n  }\n\n  render() {\n    const { onSelectedUser, todos } = this.props;\n    const filteredTodos = this.filterTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"query\"\n          value={this.state.query}\n          onChange={this.handleChange}\n        />\n        <select\n          name=\"filter\"\n          className=\"select\"\n          value={this.state.filter}\n          onChange={this.handleChange}\n        >\n          <option value=\"all\">\n            all\n          </option>\n          <option value=\"active\">\n            active\n          </option>\n          <option value=\"completed\">\n            completed\n          </option>\n        </select>\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {\n              filteredTodos.map(todo => (\n                <li\n                  key={todo.id}\n                  className={classNames(\n                    'TodoList__item',\n                    { 'TodoList__item--checked': todo.completed },\n                    { 'TodoList__item--unchecked': !todo.completed },\n                  )}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      readOnly\n                      checked={todo.completed}\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => onSelectedUser(todo.userId)}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  onSelectedUser: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com/';\n\nexport function request(url) {\n  return fetch(`${API_URL}${url}`)\n    .then(async response => (await response.json()).data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { request } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.userId !== this.props.userId) {\n      this.getUser();\n    }\n  }\n\n  async getUser() {\n    const user = await request(`users/${this.props.userId}`);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { userId, onClearUser } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {userId}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          onClick={onClearUser}\n          className=\"button button--resset\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { request } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const allTodos = await request('todos');\n    const filteredTodos = await allTodos.filter(todo => todo.title);\n\n    this.setState({\n      todos: filteredTodos,\n    });\n  }\n\n  setUserId = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} onSelectedUser={this.setUserId} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {\n              selectedUserId\n                ? (\n                  <CurrentUser\n                    userId={selectedUserId}\n                    onClearUser={this.clearUser}\n                  />\n                )\n                : 'No user selected'\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}